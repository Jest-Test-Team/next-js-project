# 工作流程的名稱
name: Deploy Next.js site to GitHub Pages

# 觸發此工作流程的事件
on:
  # 當有程式碼推送到 main 分支時觸發
  push:
    branches: ["main"]
  # 允許您在 GitHub Actions 頁面上手動觸發此工作流程
  workflow_dispatch:

# 設定 GITHUB_TOKEN 的權限，以便部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允許一個部署同時進行，新的部署會取消正在進行中的部署
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # 建置工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'
          cache-dependency-path: 'my-app/package-lock.json' # 指向正確的 package-lock.json 路徑

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Install dependencies
        working-directory: ./my-app # 指定在 my-app 資料夾內執行
        run: npm ci # 使用 ci 更適合 CI/CD 環境

      - name: Build with Next.js
        working-directory: ./my-app # 指定在 my-app 資料夾內執行
        env:
          # 傳入您在 GitHub Secrets 中設定的 API Key
          NEXT_PUBLIC_MOENV_API_KEY: ${{ secrets.NEXT_PUBLIC_MOENV_API_KEY }}
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # 從 my-app/out 目錄上傳靜態檔案
          path: ./my-app/out

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # 這個工作依賴於 build 工作成功完成
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4